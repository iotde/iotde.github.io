{"version":3,"sources":["webpack:///../components/number/SliderControl.tsx","webpack:///../components/enum/IOTPoleSlider/demo/1-demo-basic.tsx","webpack:///../components/enum/IOTPoleSlider/index.mdx","webpack:///../components/enum/IOTPoleSlider/demo/1-demo-basic.tsx?83cd","webpack:///../components/enum/IOTPoleSlider/poleSlider/index.tsx","webpack:///../components/enum/IOTPoleSlider/IOTPoleSlider.tsx","webpack:///../components/number/sliderConfig.tsx"],"names":["sliderWidth","sliderOffsetLeft","startX","startY","isTouched","isHorizontalMoved","SliderControl","start","processHanlder","onchange","currentVal","refProgess","onTouchStart","useCallback","e","doms","current","parseFloat","getBoundingClientRect","width","left","touchs","changedTouches","pageX","pageY","onTouchMove","currentX","currentY","diffX","Math","abs","diffY","onTouchEnd","onTouchCancel","props","type","streamId","title","icon","show","value","items","curValue","disabled","startHandler","val","endHandler","streamName","styleType","IOTPoleSlider","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","code","desc","isMDXComponent","Slider","barStyle","isSpecial","specialObj","dotsData","defaultDataSource","move","useState","progress","setProgress","setCurrentVal","dataSourceList","dotInfoList","useRef","setProcessPercent","processPercent","currentValue","currentText","oneStepPercent","length","currentStep","round","Number","text","useEffect","currentStepInd","entries","index","elem","SliderChildern","processVal","changVal","className","style","marginLeft","ref","item","map","key","marginRight","returnText","values","subTitle","showIconFont","rest","dataSource","setDataSource","setcurrentValue","setcurrentText","JSON","parse","stringify","dataList","checked","undefined","push","join","specialData","filterHandler","display","min","max","step","num","minTemp","maxTemp","stepTemp","lastStep","i","aInfoList","dotsLength","aInfo","pos"],"mappings":"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","file":"component---components-enum-iot-pole-slider-index-mdx-e15a0b4a16c23ebfb31f.js","sourcesContent":["import { useCallback } from \"react\";\n\nlet sliderWidth: number;\nlet sliderOffsetLeft: number;\n// let touchs: any;\nlet startX: number;\nlet startY: number;\nlet isTouched: boolean;\nlet isHorizontalMoved: boolean;\n\n\ninterface SliderProps {\n  start:() => void;\n  processHanlder: (arg: any) => any;\n  onchange: (arg0: any) => any;\n  currentVal:number;\n  refProgess:any\n}\n\n/**\n * \n * @param start 开始触摸事件\n * @param processHanlder move事件\n * @param onchange 触摸结束后事件\n * @param currentVal 参数值\n * @param refProgess ref实例 \n * @returns \n */\n\nconst SliderControl = ({\n  start,\n  processHanlder,\n  onchange,\n  currentVal,\n  refProgess\n}: SliderProps) => {\n\n  const onTouchStart: React.TouchEventHandler<HTMLDivElement> = useCallback(\n    (e) => {\n      const doms: any = refProgess.current;\n      sliderWidth = parseFloat(doms.getBoundingClientRect().width);\n      sliderOffsetLeft = parseFloat(doms.getBoundingClientRect().left);\n      const touchs = e.changedTouches[0];\n      startX = touchs.pageX;\n      startY = touchs.pageY;\n      isTouched = true;\n      isHorizontalMoved = false;\n      start();\n    },\n    [start]\n  );\n\n  const onTouchMove: React.TouchEventHandler<HTMLDivElement> = useCallback(\n    (e) => {\n      const touchs = e.changedTouches[0];\n      const currentX = touchs.pageX;\n      const currentY = touchs.pageY;\n      const diffX = Math.abs(currentX - startX);\n      const diffY = Math.abs(currentY - startY);\n      // 在第一次触发touchmove时 判断是左右滑还是上下滑\n      // 左右滑动时才是触动了滑杆的滑动 isHorizontalMoved = true;\n      if (isTouched) {\n        if (diffX * 0.8 > diffY) {\n          isHorizontalMoved = true;\n        }\n        isTouched = false;\n      }\n\n      const processPercent =\n        ((currentX - sliderOffsetLeft) / sliderWidth) * 100;\n\n      // 只有在左右滑动时 滑杆才产生变化;\n      if (isHorizontalMoved) {\n        processHanlder(processPercent);\n      }\n    },\n    [processHanlder]\n  );\n\n  const onTouchEnd = useCallback(() => {\n    if (isHorizontalMoved) {\n      onchange(currentVal);\n    } else {\n      // console.log('没有拖动不触发下发');\n    }\n  }, [currentVal, onchange]);\n\n  return {\n    onTouchStart: (e: any) => onTouchStart(e),\n    onTouchMove: (e: any) => onTouchMove(e),\n    onTouchEnd: () => onTouchEnd(),\n    onTouchCancel: () => onTouchEnd(),\n  };\n}\n\n\nexport default SliderControl;","import React from 'react';\nimport IOTPoleSlider from '../IOTPoleSlider';\nimport { IOTPoleSliderProps } from '../interface';\n\nconst props: IOTPoleSliderProps = {\n  type: 'number',\n  streamId: 'Word',\n  title: '洗涤时间',\n  icon: {\n    show: true,\n    value: 'insideicon-cu-1',\n  },\n  items: [{ \"text\": \"1档\", \"value\": \"0\", \"icon\": \"insideicon-cu-1\" }, { \"text\": \"2档\", \"value\": \"1\", \"icon\": \"insideicon-cu-1\" }, { \"text\": \"3档\", \"value\": \"2\", \"icon\": \"insideicon-cu-1\" }, { \"text\": \"4档\", \"value\": \"3\", \"icon\": \"insideicon-cu-1\" }, { \"text\": \"5档\", \"value\": \"4\", \"icon\": \"insideicon-cu-1\" }, { \"text\": \"关闭\", \"value\": \"5\", \"icon\": \"insideicon-cu-1\" }, { \"text\": \"最低速档\", \"value\": \"6\", \"icon\": \"insideicon-cu-1\" }\n  ],\n  \"specialObj\": { \"checked\": false, \"item\": { \"text\": \"3档\", \"value\": \"2\" } },\n  curValue: '2',\n  disabled: false,\n  startHandler: (val: any) => { },\n  endHandler: () => { },\n  streamName: '',\n  styleType: '1'\n};\nexport default () => <IOTPoleSlider {...props} />;","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/fengyanwei/Downloads/Git/iot-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { CodeBox } from '../../doc-comps/code-box';\nimport BasicDemo from './demo/1-demo-basic';\nimport BasicDemoCode from '!raw-loader!./demo/1-demo-basic.tsx';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"普通有极slider\"\n    }}>{`普通有极slider`}</h1>\n    <p>{`普通有极滑竿。`}</p>\n    <h2 {...{\n      \"id\": \"代码演示\"\n    }}>{`代码演示`}</h2>\n    <h3 {...{\n      \"id\": \"基本用法\"\n    }}>{`基本用法`}</h3>\n    <CodeBox code={BasicDemoCode} title=\"基本用法\" desc=\"使用kind控制Alert类型\" mdxType=\"CodeBox\">\n  <BasicDemo mdxType=\"BasicDemo\" />\n    </CodeBox>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","export default \"import React from 'react';\\nimport IOTPoleSlider from '../IOTPoleSlider';\\nimport { IOTPoleSliderProps } from '../interface';\\n\\nconst props: IOTPoleSliderProps = {\\n  type: 'number',\\n  streamId: 'Word',\\n  title: '洗涤时间',\\n  icon: {\\n    show: true,\\n    value: 'insideicon-cu-1',\\n  },\\n  items: [{ \\\"text\\\": \\\"1档\\\", \\\"value\\\": \\\"0\\\", \\\"icon\\\": \\\"insideicon-cu-1\\\" }, { \\\"text\\\": \\\"2档\\\", \\\"value\\\": \\\"1\\\", \\\"icon\\\": \\\"insideicon-cu-1\\\" }, { \\\"text\\\": \\\"3档\\\", \\\"value\\\": \\\"2\\\", \\\"icon\\\": \\\"insideicon-cu-1\\\" }, { \\\"text\\\": \\\"4档\\\", \\\"value\\\": \\\"3\\\", \\\"icon\\\": \\\"insideicon-cu-1\\\" }, { \\\"text\\\": \\\"5档\\\", \\\"value\\\": \\\"4\\\", \\\"icon\\\": \\\"insideicon-cu-1\\\" }, { \\\"text\\\": \\\"关闭\\\", \\\"value\\\": \\\"5\\\", \\\"icon\\\": \\\"insideicon-cu-1\\\" }, { \\\"text\\\": \\\"最低速档\\\", \\\"value\\\": \\\"6\\\", \\\"icon\\\": \\\"insideicon-cu-1\\\" }\\n  ],\\n  \\\"specialObj\\\": { \\\"checked\\\": false, \\\"item\\\": { \\\"text\\\": \\\"3档\\\", \\\"value\\\": \\\"2\\\" } },\\n  curValue: '2',\\n  disabled: false,\\n  startHandler: (val: any) => { },\\n  endHandler: () => { },\\n  streamName: '',\\n  styleType: '1'\\n};\\nexport default () => <IOTPoleSlider {...props} />;\";","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { dotInfoList } from \"../../../number/sliderConfig\";\nimport SliderControl from \"../../../number/SliderControl\";\nimport { specialObjProps,Iitem } from '../interface';\nimport './style.less';\n\n\ninterface SliderProps {\n  curValue: string | number;\n  onchange: (val: any) => void;\n  start: () => void;\n  disabled: boolean;\n  barStyle?: 'line' | 'bar';\n  bottomNumber?: boolean;\n  move: (val: any) => void;\n  dotsData: Iitem[];\n  isSpecial?: boolean;\n  specialObj:specialObjProps;\n  styleType:string;\n  defaultDataSource:Iitem[];\n}\n//  布局组件\nconst Slider = ({\n  barStyle = 'line',\n  isSpecial = false,\n  specialObj,\n  curValue,\n  styleType,  \n  disabled,\n  onchange,\n  dotsData,\n  defaultDataSource,\n  start,\n  move,\n}: SliderProps) => {\n  const [progress, setProgress] = useState<string>('');\n  const [currentVal, setCurrentVal] = useState<number>(0);\n  const dataSourceList: any[] = dotInfoList(dotsData);\n\n  // const [domParent,setDomParent] = useState();\n  const refProgess = useRef(null);\n\n  const setProcessPercent = useCallback(\n    (processPercent: number) => {\n      let currentValue: number = 0;\n      let currentText: string = ''\n      // 步长百分比值(每级所占整个slide长度的百分比值);\n      const oneStepPercent = 100 / (dotsData.length - 1);\n      // 1是最小值\n      let currentStep = Math.round(processPercent / oneStepPercent) + 1;\n      if (currentStep < 1) {\n        currentStep = 1\n      }\n      if (currentStep > dotsData.length) {\n        currentStep = dotsData.length\n      }\n\n      processPercent = dotInfoList(dotsData)[currentStep - 1]?.left;\n      currentValue = Number.parseFloat(dotsData[currentStep - 1].value);\n      currentText = dotsData[currentStep - 1].text;\n      move({ currentValue, currentText });\n      setCurrentVal(currentValue);\n      setProgress(`${processPercent}`);\n    },\n    [dotsData, move]\n  );\n\n\n  useEffect(() => {\n    // value 与 this.currentValue 是否一致;\n    let isSame = true;\n    // 通过对比value 与 this.currentValue 是否一致;\n    isSame = curValue === currentVal;\n    // 如果不一致 或者dots产生了变化 执行更新方法;\n    if (!isSame) {\n      let currentStepInd = 0;\n      for (const [index, elem] of (dotsData).entries()) {\n        if (curValue === elem.value) {\n          currentStepInd = index;\n        }\n      }\n      setProgress(`${dotInfoList(dotsData)[currentStepInd]?.left}`);\n    }\n  }, [curValue, barStyle, currentVal, dotsData, isSpecial])\n\n  const SliderChildern = SliderControl({\n    start: () => { start() },\n    processHanlder: (processVal: any) => { setProcessPercent(processVal) },\n    onchange: (changVal: any) => { onchange(changVal) },\n    currentVal,\n    refProgess\n  });\n\n  return (\n    <div className=\"Slider\">\n      <div style={{ marginLeft: '.225rem' }}></div>\n      <div className={`slider-bars`}>\n        {/* 设置特殊值时，滑竿能滑动距离到数组的倒数第二个 */}\n        <div className=\"slider-barn-inner\" style={{ width: `${!isSpecial ? '100%' : dotInfoList(defaultDataSource)[defaultDataSource.length - 2]?.left + '%'}` }} ref={refProgess}>\n          {/* 如果curValue !== 特殊值时,滑动的距离为0 */}\n          <div className=\"progress\" style={{ width: `${curValue !== specialObj?.item?.value ? progress : 0}%` }}>\n            {/* 如果curValue !== 特殊值时显示ball，可滑动非特殊值的范围内 */}\n            {\n              curValue !== specialObj?.item?.value && (\n                <div\n                  className=\"ball-box\"\n                  {...SliderChildern}\n                />\n              )\n            }\n          </div>\n          {\n            styleType === '1' && (\n              <>\n              {\n                dataSourceList.map((item: any, index: number) => (\n                  <div key={`${item.text} ${index}`} className={`point-items ${(curValue !== specialObj?.item?.value && (Number.parseFloat(progress) > Number.parseFloat(item.left))) ? 'point-items-active' : ''}`} style={{ left: `${item.left}%` }}></div>\n                ))\n              }\n              <div className=\"min-max\">\n                {\n                  dataSourceList.map((item: any, index: number) => (\n                    <div key={`${item.text} ${index}`} className='point-text-items' style={{ left: `${item.left}%` }}>{item.text}</div>\n                  ))\n                }\n              </div>\n              </>\n            )\n          }\n        </div>\n        {/* 设置特殊值时显示 */}\n        {\n          isSpecial &&\n          // curValue === 特殊值时 高亮该点位\n          (<>\n            <div className={`point-items ${curValue === specialObj?.item?.value ? 'point-items-active' : ''} point-special`}></div>\n            {\n              // 是有极时才会出现文字\n              styleType === '1' && (\n                <div className='point-text-special'>{specialObj?.item?.text}</div>\n              )\n            }\n          </>)\n        }\n      </div>\n      <div style={{ marginRight: '.225rem' }}></div>\n      {disabled && <div className=\"disabled\"></div>}\n    </div>\n  );\n};\n\nexport default Slider;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport Slider from './poleSlider';\nimport { IOTPoleSliderProps,Iitem,specialObjProps } from \"./interface\";\nimport './style/index.less';\n\nconst prefixCls = 'iot-pole-slider-out';\n\nconst returnText = (items: Iitem[], curValue: string) => {\n  let values: string = '';\n  items.map((item: Iitem) => {\n    if (item.value === curValue) {\n      values = item.text\n    }\n  })\n  return values;\n}\n\nconst IOTPoleSlider: React.FC<IOTPoleSliderProps> = ({\n  streamId,\n  title,\n  streamName,\n  subTitle,\n  type,\n  icon,\n  showIconFont,\n  disabled = false,\n  curValue,\n  specialObj,\n  items,\n  styleType,\n  startHandler = (val: any) => { },\n  endHandler = (val: any) => { },\n  ...rest\n}) => {\n  const [dataSource, setDataSource] = useState<Iitem[]>(items);\n  const [currentValue, setcurrentValue] = useState<string>(curValue);\n  const [currentText, setcurrentText] = useState<string>(returnText(items, curValue));\n  const defaultDataSource:Iitem[] = JSON.parse(JSON.stringify(items));\n\n  useEffect(() => {\n    setcurrentValue(curValue);\n    setcurrentText(returnText(items, curValue));\n    const dataList: any = [];\n    if (specialObj?.checked && specialObj?.item !== undefined) {\n      items.map((item: any) => {\n        if (item.value !== specialObj?.item?.value) {\n          dataList.push(item)\n        }\n      })\n      setDataSource(dataList);\n    } else {\n      setDataSource(items);\n    }\n  }, [curValue, items, specialObj])\n\n  const filterHandler = (specialObj?: specialObjProps) => {\n    if(!specialObj) return;\n    const specialData = JSON.parse(JSON.stringify(specialObj));\n    if (!specialData?.checked && specialData?.item !== undefined) {\n      specialData.item = undefined;\n      return specialData;\n    }\n    return specialData;\n  }\n\n  return (\n    <div className={prefixCls} {...rest}>\n      <div className=\"iot-pole-slider\">\n        <div className=\"iot-pole-slider-top\">\n          <div className=\"iot-pole-slider-left\">\n            {icon?.show && (\n              <div className=\"iot-pole-slider-icon\">\n                <span\n                  className={[\n                    'iot-pole-slider-icon-image',\n                    icon?.value ? icon.value : 'insideicon-cu-1',\n                  ].join(' ')}\n                ></span>\n              </div>\n            )}\n            <div\n              className=\"iot-pole-slider-title\"\n              style={{ marginLeft: icon?.show ? '0' : '.2rem' }}\n            >\n              <div className=\"iot-pole-slider-main\">{title}</div>\n            </div>\n            <div className=\"line\"></div>\n            <div className=\"value-unit\">\n              {curValue ? specialObj?.item && specialObj?.checked && curValue === specialObj?.item?.value ? specialObj?.item?.text : currentText : dataSource[0].text}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"iot-pole-slider\">\n          <Slider\n            curValue={currentValue + ''}\n            disabled={false}\n            styleType={styleType}\n            defaultDataSource={defaultDataSource}\n            specialObj={filterHandler(specialObj)}\n            // 用户勾选了 并且 设置了item\n            isSpecial={specialObj?.checked && specialObj?.item !== undefined}\n            dotsData={dataSource}\n            onchange={(val: any) => {\n              const item = {\n                streamId,\n                value: val,\n              };\n              setcurrentValue(val);\n              endHandler(item);\n            }}\n            move={(val: any) => {\n              setcurrentValue(val.currentValue);\n              setcurrentText(val.currentText);\n            }}\n            start={() => {\n              startHandler('start');\n            }}\n          ></Slider>\n        </div>\n        <div\n          className=\"disabled-pangle\"\n          style={{ display: `${disabled ? 'block' : 'none'}` }}\n        ></div>\n      </div>\n    </div>\n  );\n};\n\nexport default IOTPoleSlider;\n","export const dataSource = (min: string, max: string, step: string) => {\n  const minTemp: number = Number.parseFloat(min);\n  const maxTemp: number = Number.parseFloat(max);\n  const stepTemp: number = Number.parseFloat(step);\n  // 切割后的循环数\n  let num = 0;\n  // 数组 [{value: 10, text: '低档'}]\n  const dataList: any = [];\n  num = Math.round((maxTemp - minTemp) / stepTemp);\n  // 最大值距离循环后的最大值的差\n  // 5 % 2\n  //   // console.log(100 % 0.2) === 0.19999999999999446\n  const lastStep = maxTemp - (num * stepTemp + minTemp);\n  // 生成数组 [{value: 10, text: '低档'}]\n  for (let i = 0; i < (lastStep < 0 ? num : num + 1); i++) {\n    dataList.push({\n      value: i + 1,\n      // lastStep === 0说明和step值一样\n      text: ((stepTemp * 10) * i + minTemp * 10) / 10,\n    })\n  }\n  // lastStep !== 0 说明有余数，不取余数，操作小数不是很精确，新添加最大值到数组的最后一个\n  if (lastStep !== 0) {\n    dataList.push({\n      value: dataList.length + 1,\n      text: maxTemp,\n    })\n  }\n  //  // console.log(dataList)\n  return dataList\n}\n\n\nexport const dotInfoList = (dotsData: any[]) => {\n  const aInfoList = [];\n  const dotsLength = dotsData.length;\n  if (dotsLength > 0) {\n    const oneStepPercent = 100 / (dotsLength - 1);\n    for (let i = 0; i < dotsLength; i += 1) {\n      let aInfo: any = {\n        icon: '',\n      };\n      const hasIcon = !!dotsData[i].icon;\n      if (hasIcon) {\n        aInfo = { ...aInfo, icon: dotsData[i].icon,};\n      }\n      if (i === (dotsLength - 1)) {\n        aInfo = { ...aInfo, left: 100,};\n      } else {\n        const pos = oneStepPercent * i;\n        aInfo = { ...aInfo, left: pos,};\n      }\n      aInfo = { ...aInfo, text: dotsData[i].text,\n        value: dotsData[i].value,};\n      aInfoList.push(aInfo);\n    }\n  }\n  return aInfoList\n}"],"sourceRoot":""}