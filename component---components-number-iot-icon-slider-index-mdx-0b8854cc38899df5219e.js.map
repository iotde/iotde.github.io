{"version":3,"sources":["webpack:///../components/number/SliderControl.tsx","webpack:///../components/number/IOTIconSlider/IOTIconSlider.tsx","webpack:///../components/number/IOTIconSlider/demo/1-demo-basic.tsx","webpack:///../components/number/IOTIconSlider/index.mdx","webpack:///../components/number/IOTIconSlider/demo/1-demo-basic.tsx?7de1","webpack:///../components/number/IOTSlider/Slider/Slider.tsx","webpack:///../components/number/sliderConfig.tsx"],"names":["sliderWidth","sliderOffsetLeft","startX","startY","isTouched","isHorizontalMoved","SliderControl","start","processHanlder","onchange","currentVal","refProgess","onTouchStart","useCallback","e","doms","current","parseFloat","getBoundingClientRect","width","left","touchs","changedTouches","pageX","pageY","onTouchMove","currentX","currentY","diffX","Math","abs","diffY","onTouchEnd","onTouchCancel","IOTIconSlider","streamId","title","type","streamName","subTitle","icon","min","max","step","unit","disabled","curValue","unitdesc","leftIcon","rightIcon","startHandler","val","endHandler","rest","useState","currentValue","setcurrentValue","useEffect","typeConversion","className","show","value","join","style","marginLeft","Number","showHandleBtn","isStep","round","dotsData","dataSource","item","move","display","props","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","code","desc","isMDXComponent","Slider","barStyle","progress","setProgress","setCurrentVal","useRef","processPercent","setProcessPercent","s","parseInt","toString","oneStepPercent","length","currentStep","dotInfoList","text","JSON","stringify","currentStepInd","entries","index","elem","SliderChildern","processVal","changVal","onClick","addValue","stepTemp","stepTemp1","ref","num","minTemp","maxTemp","dataList","lastStep","i","push","aInfoList","dotsLength","aInfo","pos"],"mappings":"8FAAA,IAEIA,EACAC,EAEAC,EACAC,EACAC,EACAC,EARJ,YA6BMC,EAAgB,SAAC,GAMJ,IALjBC,EAKiB,EALjBA,MACAC,EAIiB,EAJjBA,eACAC,EAGiB,EAHjBA,SACAC,EAEiB,EAFjBA,WACAC,EACiB,EADjBA,WAGMC,EAAwDC,uBAC5D,SAACC,GACC,IAAMC,EAAYJ,EAAWK,QAC7BhB,EAAciB,WAAWF,EAAKG,wBAAwBC,OACtDlB,EAAmBgB,WAAWF,EAAKG,wBAAwBE,MAC3D,IAAMC,EAASP,EAAEQ,eAAe,GAChCpB,EAASmB,EAAOE,MAChBpB,EAASkB,EAAOG,MAChBpB,GAAY,EACZC,GAAoB,EACpBE,MAEF,CAACA,IAGGkB,EAAuDZ,uBAC3D,SAACC,GACC,IAAMO,EAASP,EAAEQ,eAAe,GAC1BI,EAAWL,EAAOE,MAClBI,EAAWN,EAAOG,MAClBI,EAAQC,KAAKC,IAAIJ,EAAWxB,GAC5B6B,EAAQF,KAAKC,IAAIH,EAAWxB,GAG9BC,IACU,GAARwB,EAAcG,IAChB1B,GAAoB,GAEtBD,GAAY,GAOVC,GACFG,GAJEkB,EAAWzB,GAAoBD,EAAe,OAOpD,CAACQ,IAGGwB,EAAanB,uBAAY,WACzBR,GACFI,EAASC,KAIV,CAACA,EAAYD,IAEhB,MAAO,CACLG,aAAc,SAACE,GAAD,OAAYF,EAAaE,IACvCW,YAAa,SAACX,GAAD,OAAYW,EAAYX,IACrCkB,WAAY,kBAAMA,KAClBC,cAAe,kBAAMD,OAKV1B,W,+VCrFT4B,EAA8C,SAAC,GAmB/C,IAlBJC,EAkBI,EAlBJA,SACAC,EAiBI,EAjBJA,MAGAC,GAcI,EAhBJC,WAgBI,EAfJC,SAeI,EAdJF,MACAG,EAaI,EAbJA,KACAC,EAYI,EAZJA,IACAC,EAWI,EAXJA,IACAC,EAUI,EAVJA,KACAC,EASI,EATJA,KASI,IARJC,gBAQI,SANJC,GAMI,EAPJC,SAOI,EANJD,UAMI,KALJE,SAKI,EAJJC,UAII,EAHJC,qBAGI,MAHW,SAACC,KAGZ,MAFJC,kBAEI,MAFS,SAACD,KAEV,EADDE,EACC,0LACoCC,mBAASR,GAA1CS,EADH,KACiBC,EADjB,KASJ,OAHAC,qBAAU,WACRD,EAAgBE,YAAerB,EAAMS,MACpC,CAACA,IAEF,+BAAKa,UAnCS,uBAmCiBN,GAC7B,mBAAKM,UAAU,mBACb,mBAAKA,UAAU,uBACb,mBAAKA,UAAU,yBACZnB,aAAA,EAAAA,EAAMoB,OACL,mBAAKD,UAAU,wBACb,oBACEA,UAAW,CACT,6BACAnB,WAAMqB,MAAQrB,EAAKqB,MAAQ,mBAC3BC,KAAK,QAIb,mBACEH,UAAU,wBACVI,MAAO,CAAEC,WAAYxB,WAAMoB,KAAO,IAAM,UAExC,mBAAKD,UAAU,wBAAwBvB,IAEzC,mBAAKuB,UAAU,SACf,mBAAKA,UAAU,cACZJ,EACAX,KAKP,mBAAKe,UAAU,0BACb,YAAC,IAAD,CACElB,IAAKwB,OAAOhD,WAAWwB,GACvBC,IAAKuB,OAAOhD,WAAWyB,GACvBC,KAAMsB,OAAOhD,WAAW0B,GACxBuB,eAAe,EACfpB,SAAUS,EAAa,GACvBV,UAAU,EAEVsB,OAAoC,IAA5BF,OAAOhD,WAAW0B,IAAed,KAAKuC,OAAOH,OAAOhD,WAAWyB,GAAOuB,OAAOhD,WAAWwB,IAAQwB,OAAOhD,WAAW0B,IAAQ,GAClI0B,SAAUC,YAAW7B,EAAIC,EAAIC,GAC7BlC,SAAU,SAAC0C,GAET,IAAMoB,EAAO,CACXpC,WACA0B,MAAOV,GAETK,EAAgBL,GAChBC,EAAWmB,IAEbC,KAAM,SAACrB,GAELK,EAAgBL,IAElB5C,MAAO,WACL2C,EAAa,aAInB,mBACES,UAAU,kBACVI,MAAO,CAAEU,QAAY5B,EAAW,QAAU,aAOrCX,W,ucCtGTwC,EAA4B,CAChCrC,KAAM,SACNF,SAAU,OACVC,MAAO,KACPI,KAAM,CACJoB,MAAM,EACNC,MAAO,mBAEThB,UAAU,EACVJ,IAAK,IACLC,IAAK,KACLC,KAAM,MACNC,KAAM,KACNG,SAAU,MACVD,SAAU,IACVI,aAAc,SAACC,KACfC,WAAY,aACZJ,SAAU,GACVC,UAAW,GACXX,WAAY,IAEC,oBAAM,YAACJ,EAAA,EAAkBwC,ICd3BC,EAAe,Q,2NAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGN,EACF,8BACD,OAAO,YAACG,EAAD,eAAeD,EAAiBF,EAAhC,CAAuCM,WAAYA,EAAYC,QAAQ,cAK5E,kBACE,GAAM,iBADR,iBAGA,+BACA,kBACE,GAAM,QADR,QAGA,kBACE,GAAM,QADR,QAGA,YAAC,IAAD,CAASC,KCnCE,+jBDmCmB9C,MAAM,OAAO+C,KAAK,kBAAkBF,QAAQ,WAC5E,YAAC,EAAD,CAAWA,QAAQ,qB,yNAMrBF,EAAWK,gBAAiB,G,g+BEd5B,IAAMC,EAAS,SAAC,GAeG,QAdjBrC,gBAciB,MAdN,oBAcM,MAbjBC,iBAaiB,MAbL,kBAaK,MAZjBqC,gBAYiB,MAZN,OAYM,EAXjBxC,EAWiB,EAXjBA,SACAL,EAUiB,EAVjBA,IACAC,EASiB,EATjBA,IACAG,EAQiB,EARjBA,SACApC,EAOiB,EAPjBA,SACA4D,EAMiB,EANjBA,SACA1B,EAKiB,EALjBA,KACApC,EAIiB,EAJjBA,MACAiE,EAGiB,EAHjBA,KAGiB,IAFjBL,cAEiB,aADjBD,qBACiB,WACeZ,mBAAiB,IAA1CiC,EADU,KACAC,EADA,OAEmBlC,mBAAS,GAAtC5C,EAFU,KAEE+E,EAFF,KAKX9E,EAAa+E,iBAAO,MAE1BjC,qBAAU,WAER,QAAiB,IAAbX,GACsB,iBAAbA,EAAuB,CAChC,GAAImB,OAAOhD,WAAW6B,GAAYL,EAIhC,OAHAgD,EAAchD,QACd+C,EAAe,MAGf,GAAIvB,OAAOhD,WAAW6B,GAAYJ,EAIlC,OAHA+C,EAAc/C,QACd8C,EAAe,QAIjB,IAAMG,GAAkB1B,OAAOhD,WAAW6B,GAAYL,IAAQ,KAAOC,EAAMD,IAE3E+C,EAAeG,EAAJ,QAGd,CAAC7C,EAAUL,EAAKC,EAAK4C,IAExB,IAAMM,EAAoB/E,uBACxB,SAAC8E,GACC,IAAIpC,EAAuB,EAE3B,GAAIY,EAAQ,CAEV,GAAIwB,GAAkB,EACpBA,EAAiB,EACjBpC,EAAed,OACV,GAAIkD,GAAkB,IAC3BA,EAAiB,IACjBpC,EAAeb,MACV,CACL,IAAMmD,GARkBnD,EAAMD,GAQCkD,EAAkB,IAAMlD,EACvDc,EAAeU,OAAO6B,SAASD,EAAEE,iBAGhC,OAEGC,EAAiB,KAAO3B,EAAS4B,OAAS,GAE5CC,EAAcrE,KAAKuC,MAAMuB,EAAiBK,GAAkB,EAC5DE,EAAc,IAChBA,EAAc,GAEZA,EAAc7B,EAAS4B,SACzBC,EAAc7B,EAAS4B,QAEzBN,EAAc,UAAGQ,YAAY9B,GAAU6B,EAAc,UAAvC,aAAG,EAAwC9E,KACzDmC,EAAec,EAAS6B,EAAc,GAAGE,KAE3C5B,EAAKjB,GAELkC,EAAclC,GACdiC,EAAeG,EAAJ,OAEb,CAACtB,EAAUF,EAAQzB,EAAKD,EAAK+B,IAI/Bf,qBAAU,WACR,IAAIU,EAAJ,CAMA,KAFWrB,IAAapC,GAItB,GAAIyD,EAAQ,CACV,GAAIrB,EAAWL,EAEb,YADAgD,EAAchD,GAEd,GAAIK,EAAWJ,EAEf,YADA+C,EAAc/C,GAGhB8C,EAAYa,KAAKC,UAAuC,KAAO5D,EAAMD,IAAxCK,EAAmBL,SAC3C,CAEL,IAFK,MAEL,EADI8D,EAAiB,EACrB,IAA6BlC,EAAUmC,aAAvC,aAAkD,eAAtCC,EAAsC,KAA/BC,EAA+B,KAC3C5D,IAAqBuD,KAAKC,UAAUI,EAAKN,QAC5CG,EAAiBE,GAGrBjB,GAAW,UAAIW,YAAY9B,GAAUkC,UAA1B,aAAI,EAAuCnF,MAA3C,SAGd,CAAC0B,EAAUL,EAAKC,EAAK4C,EAAUnB,EAAQzD,EAAY2D,IAEtD,IAAMsC,EAAiBrG,YAAc,CACnCC,MAAO,WAAQA,KACfC,eAAgB,SAACoG,GAAsBhB,EAAkBgB,IACzDnG,SAAU,SAACoG,GAAoBpG,EAASoG,IACxCnG,aACAC,eAGF,OACE,mBAAKgD,UAAU,UACZO,EACC,mBACEP,UAAS,kBAAoBX,EAApB,KAAiCiB,OAAOhD,WAAWwB,EAAI,MAAQwB,OAAOhD,WAAW6B,EAAS,IAAM,gBAAkB,IAC3HgE,QAAS,WACP,IAAIjE,EAAJ,CACA,IAAIkE,EAAW,EAEf,GAAI5C,EACF4C,EAA8B,GAAnB9C,OAAOnB,GAAwB,GAAPH,MAC9B,CAEL,IAAMqE,EAAW3C,EAASA,EAAS4B,OAAS,GAAGG,KAAO/B,EAASA,EAAS4B,OAAS,GAAGG,KAE9Ea,EAAyB,IAAbD,EAAiBA,EAAWrE,EAE9CoE,EAA8B,GAAnB9C,OAAOnB,GAAgG,IAA9EmB,OAAOnB,KAAcuB,EAASA,EAAS4B,OAAS,GAAGG,KAAOa,EAAYtE,GAI5GlC,EADEsG,EAAW,GAAKtE,EAAMA,EAAMsE,EAAW,QAK7C,mBACEpD,UAAS,0BACTlB,GAGJ,mBAAKkB,UAAS,cACZ,mBAAKA,UAAU,mBAAmBuD,IAAKvG,GACrC,mBAAKgD,UAAU,WAAWI,MAAO,CAAE5C,MAAOoE,IACxC,+BACE5B,UAAU,QACNgD,KAINzC,GAAkB,mBAAKP,UAAU,WAC/B,mBAAKA,UAAU,OAAOlB,GACtB,mBAAKkB,UAAU,OAAOjB,MAM7BwB,EACC,mBACEP,UAAS,mBAAqBV,EAArB,MAAoCgB,OAAOhD,WAAWyB,EAAI,MAAQuB,OAAOhD,WAAW6B,EAAS,IAAM,gBAAkB,IAC9HgE,QAAS,WACP,IAAIjE,EAAJ,CACA,IAAMkE,EAA8B,GAAnB9C,OAAOnB,GAAwB,GAAPH,EAGzClC,EADEsG,EAAW,GAAKrE,EAAMA,EAAMqE,EAAW,QAK7C,mBACEpD,UAAS,0BACTjB,GAGHG,GAAY,mBAAKc,UAAU,eAKnB0B,W,y5BC3NR,IAAMf,EAAa,SAAC7B,EAAaC,EAAaC,GAcnD,IAbA,IAIIwE,EAJEC,EAAkBnD,OAAOhD,WAAWwB,GACpC4E,EAAkBpD,OAAOhD,WAAWyB,GACpCsE,EAAmB/C,OAAOhD,WAAW0B,GAIrC2E,EAAgB,GAKhBC,EAAWF,IAJjBF,EAAMtF,KAAKuC,OAAOiD,EAAUD,GAAWJ,IAILA,EAAWI,GAEpCI,EAAI,EAAGA,GAAKD,EAAW,EAAIJ,EAAMA,EAAM,GAAIK,IAClDF,EAASG,KAAK,CACZ5D,MAAO2D,EAAI,EAEXpB,MAAmB,GAAXY,EAAiBQ,EAAc,GAAVJ,GAAgB,KAWjD,OAPiB,IAAbG,GACFD,EAASG,KAAK,CACZ5D,MAAOyD,EAASrB,OAAS,EACzBG,KAAMiB,IAIHC,Q,kNAIF,IAAMnB,EAAc,SAAC9B,GAC1B,IAAMqD,EAAY,GACZC,EAAatD,EAAS4B,OAC5B,GAAI0B,EAAa,EAEf,IADA,IAAM3B,EAAiB,KAAO2B,EAAa,GAClCH,EAAI,EAAGA,EAAIG,EAAYH,GAAK,EAAG,CACtC,IAAII,EAAa,CACfpF,KAAM,IAMR,KAJkB6B,EAASmD,GAAGhF,OAE5BoF,EAAQ,EAAH,KAAQA,GAAR,IAAepF,KAAM6B,EAASmD,GAAGhF,QAEpCgF,IAAOG,EAAa,EACtBC,EAAQ,EAAH,KAAQA,GAAR,IAAexG,KAAM,UACrB,CACL,IAAMyG,EAAM7B,EAAiBwB,EAC7BI,EAAQ,EAAH,KAAQA,GAAR,IAAexG,KAAMyG,IAE5BD,EAAQ,EAAH,KAAQA,GAAR,IAAexB,KAAM/B,EAASmD,GAAGpB,KACpCvC,MAAOQ,EAASmD,GAAG3D,QACrB6D,EAAUD,KAAKG,GAGnB,OAAOF,Q","file":"component---components-number-iot-icon-slider-index-mdx-0b8854cc38899df5219e.js","sourcesContent":["import { useCallback } from \"react\";\n\nlet sliderWidth: number;\nlet sliderOffsetLeft: number;\n// let touchs: any;\nlet startX: number;\nlet startY: number;\nlet isTouched: boolean;\nlet isHorizontalMoved: boolean;\n\n\ninterface SliderProps {\n  start:() => void;\n  processHanlder: (arg: any) => any;\n  onchange: (arg0: any) => any;\n  currentVal:number;\n  refProgess:any\n}\n\n/**\n * \n * @param start 开始触摸事件\n * @param processHanlder move事件\n * @param onchange 触摸结束后事件\n * @param currentVal 参数值\n * @param refProgess ref实例 \n * @returns \n */\n\nconst SliderControl = ({\n  start,\n  processHanlder,\n  onchange,\n  currentVal,\n  refProgess\n}: SliderProps) => {\n\n  const onTouchStart: React.TouchEventHandler<HTMLDivElement> = useCallback(\n    (e) => {\n      const doms: any = refProgess.current;\n      sliderWidth = parseFloat(doms.getBoundingClientRect().width);\n      sliderOffsetLeft = parseFloat(doms.getBoundingClientRect().left);\n      const touchs = e.changedTouches[0];\n      startX = touchs.pageX;\n      startY = touchs.pageY;\n      isTouched = true;\n      isHorizontalMoved = false;\n      start();\n    },\n    [start]\n  );\n\n  const onTouchMove: React.TouchEventHandler<HTMLDivElement> = useCallback(\n    (e) => {\n      const touchs = e.changedTouches[0];\n      const currentX = touchs.pageX;\n      const currentY = touchs.pageY;\n      const diffX = Math.abs(currentX - startX);\n      const diffY = Math.abs(currentY - startY);\n      // 在第一次触发touchmove时 判断是左右滑还是上下滑\n      // 左右滑动时才是触动了滑杆的滑动 isHorizontalMoved = true;\n      if (isTouched) {\n        if (diffX * 0.8 > diffY) {\n          isHorizontalMoved = true;\n        }\n        isTouched = false;\n      }\n\n      const processPercent =\n        ((currentX - sliderOffsetLeft) / sliderWidth) * 100;\n\n      // 只有在左右滑动时 滑杆才产生变化;\n      if (isHorizontalMoved) {\n        processHanlder(processPercent);\n      }\n    },\n    [processHanlder]\n  );\n\n  const onTouchEnd = useCallback(() => {\n    if (isHorizontalMoved) {\n      onchange(currentVal);\n    } else {\n      // console.log('没有拖动不触发下发');\n    }\n  }, [currentVal, onchange]);\n\n  return {\n    onTouchStart: (e: any) => onTouchStart(e),\n    onTouchMove: (e: any) => onTouchMove(e),\n    onTouchEnd: () => onTouchEnd(),\n    onTouchCancel: () => onTouchEnd(),\n  };\n}\n\n\nexport default SliderControl;","import React, { useEffect, useState } from 'react';\nimport t, { string } from 'prop-types';\nimport { IOTIconSliderProps } from './interface';\n\nimport './style/index.less';\nconst prefixCls = 'iot-icon-slider-out';\nimport Slider from '../IOTSlider/Slider/Slider';\nimport { typeConversion } from \"../../base/utils\";\nimport {dataSource} from \"../sliderConfig\";\nimport NormalIcon from '../../base/normalIcon';\n\nconst IOTIconSlider: React.FC<IOTIconSliderProps> = ({\n  streamId,\n  title,\n  streamName,\n  subTitle,\n  type,\n  icon,\n  min,\n  max,\n  step,\n  unit,\n  disabled = false,\n  unitdesc,\n  curValue,\n  leftIcon,\n  rightIcon,\n  startHandler = (val: any) => { },\n  endHandler = (val: any) => { },\n  ...rest\n}) => {\n  const [currentValue, setcurrentValue] = useState(curValue);\n  const onChange = (value: any) => {\n    setcurrentValue(value);\n    // console.log(value);\n  };\n  useEffect(() => {\n    setcurrentValue(typeConversion(type, curValue));\n  }, [curValue])\n  return (\n    <div className={prefixCls} {...rest}>\n      <div className=\"iot-icon-slider\">\n        <div className=\"iot-icon-slider-top\">\n          <div className=\"iot-icon-slider-left\">\n            {icon?.show && (\n              <div className=\"iot-icon-slider-icon\">\n                <span\n                  className={[\n                    'iot-icon-slider-icon-image',\n                    icon?.value ? icon.value : 'insideicon-cu-1',\n                  ].join(' ')}\n                ></span>\n              </div>\n            )}\n            <div\n              className=\"iot-icon-slider-title\"\n              style={{ marginLeft: icon?.show ? '0' : '.2rem' }}\n            >\n              <div className=\"iot-icon-slider-main\">{title}</div>\n            </div>\n            <div className=\"line\"></div>\n            <div className=\"value-unit\">\n              {currentValue}\n              {unit}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"iot-icon-slider-number\">\n          <Slider\n            min={Number.parseFloat(min)}\n            max={Number.parseFloat(max)}\n            step={Number.parseFloat(step)}\n            showHandleBtn={true}\n            curValue={currentValue+''}\n            disabled={false}\n            // ===1 && 差值/步长 >50 无极 否则 有极\n            isStep={Number.parseFloat(step) === 1 &&(Math.round((Number.parseFloat(max) - Number.parseFloat(min)) / Number.parseFloat(step)) >50) }\n            dotsData={dataSource(min,max,step)}\n            onchange={(val: any) => {\n              // // console.log(val);\n              const item = {\n                streamId,\n                value: val,\n              };\n              setcurrentValue(val);\n              endHandler(item);\n            }}\n            move={(val: any) => {\n              // // console.log(val);\n              setcurrentValue(val);\n            }}\n            start={() => {\n              startHandler('start');\n            }}\n          ></Slider>\n        </div>\n        <div\n          className=\"disabled-pangle\"\n          style={{ display: `${disabled ? 'block' : 'none'}` }}\n        ></div>\n      </div>\n    </div>\n  );\n};\n\nexport default IOTIconSlider;\n","import React from 'react';\nimport IOTIconSlider from '../IOTIconSlider';\nimport { IOTIconSliderProps } from '../interface';\n\nconst props: IOTIconSliderProps = {\n  type: 'number',\n  streamId: 'Word',\n  title: '温度',\n  icon: {\n    show: true,\n    value: 'insideicon-cu-1',\n  },\n  disabled: false,\n  min: '1',\n  max: '10',\n  step: '0.5',\n  unit: '°C',\n  unitdesc: '摄氏度',\n  curValue: '1',\n  startHandler: (val: any) => { },\n  endHandler: () => { },\n  leftIcon: '',\n  rightIcon: '',\n  streamName: ''\n};\nexport default () => <IOTIconSlider {...props} />;","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/fengyanwei/Downloads/Git/iot-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { CodeBox } from '../../doc-comps/code-box';\nimport BasicDemo from './demo/1-demo-basic';\nimport BasicDemoCode from '!raw-loader!./demo/1-demo-basic.tsx';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"带图标的数值型slider\"\n    }}>{`带图标的数值型slider`}</h1>\n    <p>{`控制区间值。`}</p>\n    <h2 {...{\n      \"id\": \"代码演示\"\n    }}>{`代码演示`}</h2>\n    <h3 {...{\n      \"id\": \"基本用法\"\n    }}>{`基本用法`}</h3>\n    <CodeBox code={BasicDemoCode} title=\"基本用法\" desc=\"使用kind控制Alert类型\" mdxType=\"CodeBox\">\n  <BasicDemo mdxType=\"BasicDemo\" />\n    </CodeBox>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","export default \"import React from 'react';\\nimport IOTIconSlider from '../IOTIconSlider';\\nimport { IOTIconSliderProps } from '../interface';\\n\\nconst props: IOTIconSliderProps = {\\n  type: 'number',\\n  streamId: 'Word',\\n  title: '温度',\\n  icon: {\\n    show: true,\\n    value: 'insideicon-cu-1',\\n  },\\n  disabled: false,\\n  min: '1',\\n  max: '10',\\n  step: '0.5',\\n  unit: '°C',\\n  unitdesc: '摄氏度',\\n  curValue: '1',\\n  startHandler: (val: any) => { },\\n  endHandler: () => { },\\n  leftIcon: '',\\n  rightIcon: '',\\n  streamName: ''\\n};\\nexport default () => <IOTIconSlider {...props} />;\";","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport {dotInfoList} from \"../../sliderConfig\";\nimport SliderControl from \"../../SliderControl\";\nimport './Slider.less';\n\ninterface SliderProps {\n  leftIcon?: string;\n  rightIcon?: string;\n  curValue: string | number;\n  onchange: (val: any) => void;\n  start: () => void;\n  min: number;\n  max: number;\n  step: number;\n  disabled: boolean;\n  barStyle?: 'line' | 'bar';\n  showHandleBtn: boolean;\n  bottomNumber?: boolean;\n  move: (val: any) => void;\n  isStep?: boolean;\n  dotsData?: any;  /**\n                     * 滑杆下面的文字信息列表,有级时 以此来判断份几级\n                     * dots是一组json对象组成的数组;\n                     * 包含的字段: value、text、icon;\n                     * 例: [{value: 10, text: '低档', icon: model-cool},{value: 20, text: '中档',                    icon: model-cool}];\n                     * */\n}\n//  布局组件\nconst Slider = ({\n  leftIcon = \"insideicon-reduce\",\n  rightIcon = \"insideicon-plus\",\n  barStyle = 'line',\n  curValue,\n  min,\n  max,\n  disabled,\n  onchange,\n  dotsData,\n  step,\n  start,\n  move,\n  isStep = true,\n  showHandleBtn = true,\n}: SliderProps) => {\n  const [progress, setProgress] = useState<string>('');\n  const [currentVal, setCurrentVal] = useState(0);\n\n  // const [domParent,setDomParent] = useState();\n  const refProgess = useRef(null);\n\n  useEffect(() => {\n    // console.log('Slider, useEffect, curValue', curValue);\n    if (curValue !== void 0) {\n      if (typeof curValue === 'string') {\n        if (Number.parseFloat(curValue) < min) {\n          setCurrentVal(min);\n          setProgress(`${0  }%`);\n\n          return;\n        } if (Number.parseFloat(curValue) > max) {\n          setCurrentVal(max);\n          setProgress(`${100  }%`);\n\n          return;\n        }\n        const processPercent = (Number.parseFloat(curValue) - min) * (100 / (max - min));\n\n        setProgress(`${processPercent  }%`);\n      }\n    }\n  }, [curValue, min, max, barStyle]);\n\n  const setProcessPercent = useCallback(\n    (processPercent: number) => {\n      let currentValue: number = 0;\n      // 无极\n      if (isStep) {\n        const valueDiff: number = max - min;\n        if (processPercent <= 0) {\n          processPercent = 0;\n          currentValue = min;\n        } else if (processPercent >= 100) {\n          processPercent = 100;\n          currentValue = max;\n        } else {\n          const s: number = (valueDiff * processPercent) / 100 + min;\n          currentValue = Number.parseInt(s.toString());\n        }\n      }  // 有极\n      else {\n        // 步长百分比值(每级所占整个slide长度的百分比值);\n        const oneStepPercent = 100 / (dotsData.length - 1);\n        // 1是最小值\n        let currentStep = Math.round(processPercent / oneStepPercent) + 1;\n        if (currentStep < 1) {\n          currentStep = 1\n        }\n        if (currentStep > dotsData.length) {\n          currentStep = dotsData.length\n        }\n        processPercent = dotInfoList(dotsData)[currentStep - 1]?.left;\n        currentValue = dotsData[currentStep - 1].text;\n      }\n      move(currentValue);\n      // // console.log(currentValue);\n      setCurrentVal(currentValue);\n      setProgress(`${processPercent  }%`);\n    },\n    [dotsData, isStep, max, min, move]\n  );\n\n\n  useEffect(() => {\n    if (isStep) return;\n    // value 与 this.currentValue 是否一致;\n    let isSame = true;\n      // 通过对比value 与 this.currentValue 是否一致;\n      isSame = curValue === currentVal;\n    // 如果不一致 或者dots产生了变化 执行更新方法;\n    if (!isSame) {\n      // 无级\n      if (isStep) {\n        if (curValue < min) {\n          setCurrentVal(min);\n          return;\n        } if (curValue > max) {\n          setCurrentVal(max);\n          return;\n        }\n        setProgress(JSON.stringify(((curValue as any) - min) * (100 / (max - min))));\n      } else {\n        let currentStepInd = 0;\n        for (const [index, elem] of (dotsData).entries()) {\n          if ((curValue as any) === JSON.stringify(elem.text)) {\n            currentStepInd = index;\n          }\n        }\n        setProgress(`${dotInfoList(dotsData)[currentStepInd]?.left  }%`);\n      }\n    }\n  }, [curValue, min, max, barStyle, isStep, currentVal, dotsData])\n\n  const SliderChildern = SliderControl({\n    start: () => { start() },\n    processHanlder: (processVal: any) => { setProcessPercent(processVal) },\n    onchange: (changVal: any) => { onchange(changVal) },\n    currentVal,\n    refProgess\n  });\n\n  return (\n    <div className=\"Slider\">\n      {showHandleBtn ? (\n        <div\n          className={`icon icon-left ${leftIcon} ${ Number.parseFloat(min+'') === Number.parseFloat(curValue+'') ? 'icon-disabled' : '' }`}\n          onClick={() => {\n            if (disabled) return;\n            let addValue = 0;\n            // 无极\n            if (isStep) {\n              addValue = Number(curValue) * 10 - step * 10;\n            } else {\n              // 有极 最后一项和倒数第二项差\n              const stepTemp = dotsData[dotsData.length - 1].text - dotsData[dotsData.length - 2].text;\n              // ===0 说明整个数组等分取step\n              const stepTemp1 = stepTemp !== 0 ? stepTemp : step\n              // Number(curValue) === dotsData[dotsData.length - 1].text 是最后一个，取差值，不是取step\n              addValue = Number(curValue) * 10 - (Number(curValue) === dotsData[dotsData.length - 1].text ? stepTemp1 : step) * 10;\n            }\n            const value =\n              addValue / 10 < min ? min : addValue / 10;\n            onchange(value);\n          }}\n        ></div>\n      ) : (\n        <div\n          className={`icon icon-number-left `}\n        >{min}</div>\n      )}\n\n      <div className={`slider-bar`}>\n        <div className=\"slider-bar-inner\" ref={refProgess}>\n          <div className=\"progress\" style={{ width: progress }}>\n            <div\n              className=\"ball\"\n              {...SliderChildern}\n            ></div>\n          </div>\n          {\n            showHandleBtn && (<div className=\"min-max\">\n              <div className=\"min\">{min}</div>\n              <div className=\"max\">{max}</div>\n            </div>)\n          }\n\n        </div>\n      </div>\n      {showHandleBtn ? (\n        <div\n          className={`icon icon-right ${rightIcon}  ${ Number.parseFloat(max+'') === Number.parseFloat(curValue+'') ? 'icon-disabled' : '' }`}\n          onClick={() => {\n            if (disabled) return;\n            const addValue = Number(curValue) * 10 + step * 10;\n            const value =\n              addValue / 10 > max ? max : addValue / 10;\n            onchange(value);\n          }}\n        ></div>\n      ) : (\n        <div\n          className={`icon icon-number-right`}\n        >{max}</div>\n      )}\n\n      {disabled && <div className=\"disabled\"></div>}\n    </div>\n  );\n};\n\nexport default Slider;\n","export const dataSource = (min: string, max: string, step: string) => {\n  const minTemp: number = Number.parseFloat(min);\n  const maxTemp: number = Number.parseFloat(max);\n  const stepTemp: number = Number.parseFloat(step);\n  // 切割后的循环数\n  let num = 0;\n  // 数组 [{value: 10, text: '低档'}]\n  const dataList: any = [];\n  num = Math.round((maxTemp - minTemp) / stepTemp);\n  // 最大值距离循环后的最大值的差\n  // 5 % 2\n  //   // console.log(100 % 0.2) === 0.19999999999999446\n  const lastStep = maxTemp - (num * stepTemp + minTemp);\n  // 生成数组 [{value: 10, text: '低档'}]\n  for (let i = 0; i < (lastStep < 0 ? num : num + 1); i++) {\n    dataList.push({\n      value: i + 1,\n      // lastStep === 0说明和step值一样\n      text: ((stepTemp * 10) * i + minTemp * 10) / 10,\n    })\n  }\n  // lastStep !== 0 说明有余数，不取余数，操作小数不是很精确，新添加最大值到数组的最后一个\n  if (lastStep !== 0) {\n    dataList.push({\n      value: dataList.length + 1,\n      text: maxTemp,\n    })\n  }\n  //  // console.log(dataList)\n  return dataList\n}\n\n\nexport const dotInfoList = (dotsData: any[]) => {\n  const aInfoList = [];\n  const dotsLength = dotsData.length;\n  if (dotsLength > 0) {\n    const oneStepPercent = 100 / (dotsLength - 1);\n    for (let i = 0; i < dotsLength; i += 1) {\n      let aInfo: any = {\n        icon: '',\n      };\n      const hasIcon = !!dotsData[i].icon;\n      if (hasIcon) {\n        aInfo = { ...aInfo, icon: dotsData[i].icon,};\n      }\n      if (i === (dotsLength - 1)) {\n        aInfo = { ...aInfo, left: 100,};\n      } else {\n        const pos = oneStepPercent * i;\n        aInfo = { ...aInfo, left: pos,};\n      }\n      aInfo = { ...aInfo, text: dotsData[i].text,\n        value: dotsData[i].value,};\n      aInfoList.push(aInfo);\n    }\n  }\n  return aInfoList\n}"],"sourceRoot":""}