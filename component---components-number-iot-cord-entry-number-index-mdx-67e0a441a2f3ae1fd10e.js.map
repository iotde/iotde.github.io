{"version":3,"sources":["webpack:///../components/number/SliderControl.tsx","webpack:///../components/common/IOTBottomSlide/index.tsx","webpack:///../components/number/IOTCordEntryNumber/IOTNumberSlider/index.tsx","webpack:///../components/number/IOTCordEntryNumber/IOTCordEntryNumber.tsx","webpack:///../components/number/IOTCordEntryNumber/demo/1-demo-basic.tsx","webpack:///../components/number/IOTCordEntryNumber/index.mdx","webpack:///../components/number/IOTCordEntryNumber/demo/1-demo-basic.tsx?be4d","webpack:///../components/number/sliderConfig.tsx"],"names":["sliderWidth","sliderOffsetLeft","startX","startY","isTouched","isHorizontalMoved","SliderControl","start","processHanlder","onchange","currentVal","refProgess","onTouchStart","useCallback","e","doms","current","parseFloat","getBoundingClientRect","width","left","touchs","changedTouches","pageX","pageY","onTouchMove","currentX","currentY","diffX","Math","abs","diffY","onTouchEnd","onTouchCancel","IOTBottomSlide","props","useState","state","setState","useEffect","setTimeout","isShow","className","style","bottom","type","onClick","confirmHandler","leftText","title","rightText","children","IOTNumberSlider","leftIcon","rightIcon","barStyle","curValue","min","max","unit","disabled","dotsData","step","move","isStep","showHandleBtn","progress","setProgress","setCurrentVal","useRef","Number","processPercent","Object","prototype","toString","call","toLowerCase","text","value","JSON","stringify","currentStepInd","entries","index","elem","dotInfoList","setProcessPercent","currentValue","parseInt","oneStepPercent","length","currentStep","round","SliderChildern","processVal","changVal","addValue","ref","IOTCordEntryNumber","streamId","streamName","subTitle","icon","handler","rest","startHandler","endHandler","unitdesc","setcurrentValue","btmSlider","setBtmSlider","btmBarType","typeConversion","show","join","marginLeft","val","dataSource","Error","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","code","desc","isMDXComponent","num","minTemp","maxTemp","stepTemp","dataList","lastStep","i","push","aInfoList","dotsLength","aInfo","pos"],"mappings":"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","file":"component---components-number-iot-cord-entry-number-index-mdx-67e0a441a2f3ae1fd10e.js","sourcesContent":["import { useCallback } from \"react\";\n\nlet sliderWidth: number;\nlet sliderOffsetLeft: number;\n// let touchs: any;\nlet startX: number;\nlet startY: number;\nlet isTouched: boolean;\nlet isHorizontalMoved: boolean;\n\n\ninterface SliderProps {\n  start:() => void;\n  processHanlder: (arg: any) => any;\n  onchange: (arg0: any) => any;\n  currentVal:number;\n  refProgess:any\n}\n\n/**\n * \n * @param start 开始触摸事件\n * @param processHanlder move事件\n * @param onchange 触摸结束后事件\n * @param currentVal 参数值\n * @param refProgess ref实例 \n * @returns \n */\n\nconst SliderControl = ({\n  start,\n  processHanlder,\n  onchange,\n  currentVal,\n  refProgess\n}: SliderProps) => {\n\n  const onTouchStart: React.TouchEventHandler<HTMLDivElement> = useCallback(\n    (e) => {\n      const doms: any = refProgess.current;\n      sliderWidth = parseFloat(doms.getBoundingClientRect().width);\n      sliderOffsetLeft = parseFloat(doms.getBoundingClientRect().left);\n      const touchs = e.changedTouches[0];\n      startX = touchs.pageX;\n      startY = touchs.pageY;\n      isTouched = true;\n      isHorizontalMoved = false;\n      start();\n    },\n    [start]\n  );\n\n  const onTouchMove: React.TouchEventHandler<HTMLDivElement> = useCallback(\n    (e) => {\n      const touchs = e.changedTouches[0];\n      const currentX = touchs.pageX;\n      const currentY = touchs.pageY;\n      const diffX = Math.abs(currentX - startX);\n      const diffY = Math.abs(currentY - startY);\n      // 在第一次触发touchmove时 判断是左右滑还是上下滑\n      // 左右滑动时才是触动了滑杆的滑动 isHorizontalMoved = true;\n      if (isTouched) {\n        if (diffX * 0.8 > diffY) {\n          isHorizontalMoved = true;\n        }\n        isTouched = false;\n      }\n\n      const processPercent =\n        ((currentX - sliderOffsetLeft) / sliderWidth) * 100;\n\n      // 只有在左右滑动时 滑杆才产生变化;\n      if (isHorizontalMoved) {\n        processHanlder(processPercent);\n      }\n    },\n    [processHanlder]\n  );\n\n  const onTouchEnd = useCallback(() => {\n    if (isHorizontalMoved) {\n      onchange(currentVal);\n    } else {\n      // console.log('没有拖动不触发下发');\n    }\n  }, [currentVal, onchange]);\n\n  return {\n    onTouchStart: (e: any) => onTouchStart(e),\n    onTouchMove: (e: any) => onTouchMove(e),\n    onTouchEnd: () => onTouchEnd(),\n    onTouchCancel: () => onTouchEnd(),\n  };\n}\n\n\nexport default SliderControl;","import React, { useEffect, useState } from 'react';\n\nimport './index.less';\ninterface IOTBottomSlideProps {\n    leftText: string;\n    rightText: string;\n    title?: string;\n    isShow: boolean;\n    type:string;\n    confirmHandler: (val: any) => void;\n}\n\nconst IOTBottomSlide: React.FC<IOTBottomSlideProps> = (props) => {\n    const [state,setState] =useState(false);\n    useEffect(() => {\n        setTimeout(() => {\n            setState(props.isShow)\n        },0)\n    },[props.isShow])\n    return (\n        <>\n            {props.isShow && (<div className=\"iot-bottom-slide\">\n                <div className=\"iot-bottom-layer\" style={{ bottom: state ? '0' : '-80%' }}>\n                    {\n                        props.type === \"com\" && (\n                            <div className=\"top\" >\n                            <div className=\"left\" onClick={() => {\n                                props.confirmHandler(false);\n                            }}>{props.leftText}</div>\n                             <div className='middles'>{props.title}</div> \n                            <div className=\"right\" onClick={() => {\n                                props.confirmHandler(true);\n                            }}>{props.rightText}</div>\n                        </div>\n                        )\n                    }\n                      {\n                        props.type === \"show\" && (\n                            <div className=\"top\" >\n                            <div className=\"left-show\" onClick={() => {\n                            }}> <div className='middle-show'>{props.leftText} </div> </div>\n                            <div className=\"right\" onClick={() => {\n                                props.confirmHandler(false);\n                            }}>{props.rightText}</div>\n                        </div>\n                        )\n                    }\n                  \n\n                    <div className=\"iot-bottom-context\">\n                        {props.children}\n                    </div>\n                </div>\n            </div>)\n            }\n        </>\n\n    );\n};\n\nexport default IOTBottomSlide;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { dotInfoList } from \"../../sliderConfig\";\nimport SliderControl from \"../../SliderControl\";\nimport './index.less';\n\n\ninterface SliderProps {\n  leftIcon?: string;\n  rightIcon?: string;\n  curValue: string | number | object;\n  onchange: (val: any) => void;\n  start: () => void;\n  min: number;\n  max: number;\n  step: number;\n  disabled: boolean;\n  unit: string;\n  barStyle?: 'line';\n  showHandleBtn: boolean;\n  move: (val: any) => void;\n  isStep?: boolean;\n  dotsData?: any;  /**\n                       * 滑杆下面的文字信息列表,有级时 以此来判断份几级\n                       * dots是一组json对象组成的数组;\n                       * 包含的字段: value、text、icon;\n                       * 例: [{value: 10, text: '低档', icon: model-cool},{value: 20, text: '中档',                    icon: model-cool}];\n                       **/\n}\n//  布局组件\nconst IOTNumberSlider = ({\n  leftIcon = \"insideicon-reduce\",\n  rightIcon = \"insideicon-plus\",\n  barStyle = 'line',\n  curValue,\n  min,\n  max,\n  unit,\n  disabled,\n  onchange,\n  dotsData,\n  step,\n  start,\n  move,\n  isStep = true,\n  showHandleBtn = true,\n}: SliderProps) => {\n  const [progress, setProgress] = useState<string>('');\n\n  const [currentVal, setCurrentVal] = useState(0);\n  // const [domParent,setDomParent] = useState();\n  const refProgess = useRef(null);\n\n  useEffect(() => {\n    // console.log('Slider, useEffect, curValue', curValue);\n    if (curValue !== void 0) {\n      if (typeof curValue === 'string') {\n        if (Number.parseFloat(curValue) < min) {\n          setCurrentVal(min);\n          setProgress(min + '%');\n          return;\n        } else if (Number.parseFloat(curValue) > max) {\n          setCurrentVal(max);\n          setProgress(max + '%');\n          return;\n        }\n        setCurrentVal(Number.parseFloat(curValue));\n        let processPercent = (Number.parseFloat(curValue) - min) * (100 / (max - min));\n        setProgress(processPercent + '%');\n      }\n    }\n  }, [curValue, min, max, barStyle]);\n\n  useEffect(() => {\n    if (currentVal !== void 0) {\n      if (currentVal < min) {\n        setProgress(min + '%');\n        return;\n      } else if (currentVal > max) {\n        setProgress(max + '%');\n        return;\n      }\n      let processPercent = (currentVal - min) * (100 / (max - min));\n      setProgress(processPercent + '%');\n    }\n  }, [currentVal]);\n\n  useEffect(() => {\n    if (isStep) return;\n    // 判断传入的value类型是否是json object;\n    // value 与 this.currentValue 是否一致;\n    let isSame = true;\n    // 判断val是否是json对象\n    if (typeof curValue === 'object') {\n      // 判断this.currentValue是否是json对象\n      if (Object.prototype.toString.call(currentVal).toLowerCase() !== '[object object]') {\n        isSame = false;\n      } else {\n        // 通过对比value 与 this.currentValue 是否一致;\n        isSame = ((curValue as any).text === (currentVal as any).text) || ((curValue as any).value === (currentVal as any).value);\n      }\n    } else {\n      // 通过对比value 与 this.currentValue 是否一致;\n      isSame = curValue === currentVal;\n    }\n    // 如果不一致 或者dots产生了变化 执行更新方法;\n    if (!isSame) {\n      // 无级\n      if (isStep) {\n        if (curValue < min) {\n          setCurrentVal(min);\n          return;\n        } else if (curValue > max) {\n          setCurrentVal(max);\n          return;\n        }\n        setProgress(JSON.stringify(((curValue as any) - min) * (100 / (max - min))));\n      } else {\n        let currentStepInd = 0;\n          for (const [index, elem] of (dotsData).entries()) {\n            if ((curValue as any) === JSON.stringify(elem.text)) {\n              currentStepInd = index;\n            }\n          }\n        setProgress(dotInfoList(dotsData)[currentStepInd]?.left + '%');\n      }\n    }\n  }, [curValue, min, max, barStyle, isStep])\n\n  const setProcessPercent = useCallback(\n    (processPercent: number) => {\n      let currentValue: number = 0;\n      if (isStep) {\n        const valueDiff: number = max - min;\n        if (processPercent <= 0) {\n          processPercent = 0;\n          currentValue = min;\n        } else if (processPercent >= 100) {\n          processPercent = 100;\n          currentValue = max;\n        } else {\n          const s: number = (valueDiff * processPercent) / 100 + min;\n          currentValue = parseInt(s.toString(), 10);\n        }\n      }  //有极\n      else {\n        // 步长百分比值(每级所占整个slide长度的百分比值);\n        const oneStepPercent = 100 / (dotsData.length - 1);\n        // 1是最小值\n        let currentStep = Math.round(processPercent / oneStepPercent) + 1;\n        if (currentStep < 1) {\n          currentStep = 1\n        }\n        if (currentStep > dotsData.length) {\n          currentStep = dotsData.length\n        }\n        processPercent = dotInfoList(dotsData)[currentStep - 1]?.left;\n          currentValue = dotsData[currentStep - 1].text;\n      }\n      move(currentValue);\n      setCurrentVal(currentValue);\n      setProgress(processPercent + '%');\n    },\n    [max, min]\n  );\n\n  const SliderChildern = SliderControl({\n    start: () => { start() },\n    processHanlder: (processVal: any) => { setProcessPercent(processVal) },\n    onchange: (changVal: any) => { onchange(changVal) },\n    currentVal,\n    refProgess\n  });\n\n  return (\n    <div className=\"iot-number-slider\">\n      <div className=\"number-change\">\n        <span className=\"number-value\">{currentVal}</span>  <span className=\"number-unit\">{unit}</span>\n      </div>\n      <div className=\"number-slider\">\n        <div\n          className={`icon icon-left ${leftIcon}`}\n          onClick={() => {\n            if (disabled) return;\n            const addValue = currentVal * 10 - step * 10;\n            const value = addValue / 10 < min ? min : addValue / 10;\n            setCurrentVal(value);\n            onchange(value);\n          }}\n        ></div>\n        <div className={`slider-bar slider-bar-${barStyle}`}>\n          <div className=\"slider-bar-inner\" ref={refProgess}>\n            <div className=\"progress\" style={{ width: progress }}>\n              <div\n                className=\"ball\"\n                {...SliderChildern}\n              ></div>\n            </div>\n            {/* <div className=\"min-max\">\n                            <div className=\"min\">{min}</div>\n                            <div className=\"max\">{max}</div>\n                        </div> */}\n          </div>\n        </div>\n\n        <div\n          className={`icon icon-right ${rightIcon}`}\n          onClick={() => {\n            if (disabled) return;\n            const addValue = currentVal * 10 + step * 10;\n            const value =\n              addValue / 10 > max ? max : addValue / 10;\n            setCurrentVal(value);\n            onchange(value);\n\n          }}\n        ></div>\n\n      </div>\n\n    </div>\n  );\n};\n\nexport default IOTNumberSlider;\n","import React, { useEffect, useState } from 'react';\nimport { IOTCordEntryNumberProps } from './interface';\nimport IOTBottomSlide from '../../common/IOTBottomSlide/index'\nimport IOTNumberSlider from './IOTNumberSlider/index';\nimport {dataSource} from \"../sliderConfig\";\n\nimport './style/index.less';\nimport { typeConversion } from '../../base/utils';\nconst prefixCls = 'iot-cord-entry-number-out';\n\nconst IOTCordEntryNumber: React.FC<IOTCordEntryNumberProps> = ({\n  title,\n  streamId,\n  type,\n  streamName,\n  curValue,\n  subTitle,\n  unit,\n  icon,\n  min,\n  max,\n  step,\n  disabled = false,\n  handler,\n  startHandler = (val: any) => { },\n  endHandler = (val: any) => { },\n  unitdesc,\n  ...rest\n}) => {\n  const [currentValue, setcurrentValue] = useState(0);\n  const [btmSlider, setBtmSlider] = useState(false);\n  const onChange = (value: any) => {\n    setcurrentValue(value);\n    // console.log(value);\n  };\n  const [btmBarType, setBtmBarType] = useState('com'); // com // show\n\n  useEffect(() => {\n    if (!btmSlider) {\n      setcurrentValue(Number.parseInt(typeConversion(type, curValue)));\n    }\n  }, [curValue, btmSlider])\n  return (\n    <>\n      <div className={prefixCls} {...rest}>\n        <div className='iot-cord-entry-number'>\n          <div className='cord-entry-number-left'>\n            {\n              icon?.show && (\n                <div className=\"cord-entry-number-icon\">\n                  <span className={['cord-entry-number-icon-image', icon?.value ? icon.value : 'insideicon-cu-1'].join(' ')}></span>\n                </div>\n              )\n            }\n            <div className=\"cord-entry-number-title\" style={{ marginLeft: icon?.show ? '0' : '.2rem' }} >\n              <div className=\"cord-entry-number-main\" >{title}</div>\n              {\n                subTitle?.show && (\n                  <div className=\"cord-entry-number-sub\">{subTitle['value']}</div>\n                )\n              }\n            </div>\n          </div>\n          <div className=\"cord-entry-number-right\" onClick={() => {\n\n          }}>\n            <div className='number-show' onClick={() => {\n              setBtmSlider(true);\n            }}>\n              <div className='cord-entry-number-text'>{curValue}{unit}</div><div className='arrow insideicon-entry'></div>\n\n            </div>\n          </div>\n          {disabled && (\n            <div className=\"cord-entry-number-disable\"></div>\n          )}\n        </div>\n      </div>\n      <IOTBottomSlide\n        type={btmBarType}\n        isShow={btmSlider}\n        confirmHandler={(val: any) => {\n          // console.log(val);\n          setBtmSlider(false);\n        }}\n        leftText='取消' rightText='确定' title={title}>\n        <IOTNumberSlider\n          min={Number.parseFloat(min)}\n          max={Number.parseFloat(max)}\n          step={Number.parseFloat(step)}\n          unit={unit}\n          isStep={Number.parseFloat(step) === 1 &&(Math.round((Number.parseFloat(max) - Number.parseFloat(min)) / Number.parseFloat(step)) >50) }\n          showHandleBtn={false}\n          curValue={currentValue +''}\n          dotsData={dataSource(min, max, step)}\n          disabled={false}\n          onchange={(val: any) => {\n            // console.log(val);\n            const item = {\n              streamId,\n              value: val,\n            };\n            handler && handler(item);\n          }}\n          move={(val: any) => {\n            // console.log(val);\n            // setcurrentValue(val);\n          }}\n          start={() => {\n            // startHandler('start');\n          }}\n        /\n        >\n\n      </IOTBottomSlide>\n    </>\n  );\n};\n\nexport default IOTCordEntryNumber;\n","import React from 'react';\nimport IOTCordEntryNumber from '../IOTCordEntryNumber';\nimport { IOTCordEntryNumberProps } from '../interface';\n\nconst props: IOTCordEntryNumberProps = {\n  type: 'number',\n  streamId: 'Word',\n  title: '功能名称',\n  subTitle: { value: '副标题', show: true },\n  icon: { value: 'insideicon-cu-1', show: true },\n  min: '16',\n  max: '32',\n  step: '0.5',\n  unit: '°C',\n  unitdesc: '摄氏度',\n  handler: (val: any) => {\n    // console.log('向外', val);\n  },\n  curValue: '16',\n  startHandler: function (val: any): void {\n    throw new Error('Function not implemented.');\n  },\n  endHandler: function (val: any): void {\n    throw new Error('Function not implemented.');\n  }\n};\nexport default () => <IOTCordEntryNumber {...props} />;","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/fengyanwei/Downloads/Git/iot-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { CodeBox } from '../../doc-comps/code-box';\nimport BasicDemo from './demo/1-demo-basic';\nimport BasicDemoCode from '!raw-loader!./demo/1-demo-basic.tsx';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"入口数值\"\n    }}>{`入口数值`}</h1>\n    <p>{`  加减控制区间值。`}</p>\n    <h2 {...{\n      \"id\": \"代码演示\"\n    }}>{`代码演示`}</h2>\n    <h3 {...{\n      \"id\": \"基本用法\"\n    }}>{`基本用法`}</h3>\n    <CodeBox code={BasicDemoCode} title=\"基本用法\" desc=\"使用kind控制Alert类型\" mdxType=\"CodeBox\">\n  <BasicDemo mdxType=\"BasicDemo\" />\n    </CodeBox>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","export default \"import React from 'react';\\nimport IOTCordEntryNumber from '../IOTCordEntryNumber';\\nimport { IOTCordEntryNumberProps } from '../interface';\\n\\nconst props: IOTCordEntryNumberProps = {\\n  type: 'number',\\n  streamId: 'Word',\\n  title: '功能名称',\\n  subTitle: { value: '副标题', show: true },\\n  icon: { value: 'insideicon-cu-1', show: true },\\n  min: '16',\\n  max: '32',\\n  step: '0.5',\\n  unit: '°C',\\n  unitdesc: '摄氏度',\\n  handler: (val: any) => {\\n    // console.log('向外', val);\\n  },\\n  curValue: '16',\\n  startHandler: function (val: any): void {\\n    throw new Error('Function not implemented.');\\n  },\\n  endHandler: function (val: any): void {\\n    throw new Error('Function not implemented.');\\n  }\\n};\\nexport default () => <IOTCordEntryNumber {...props} />;\";","export const dataSource = (min: string, max: string, step: string) => {\n  const minTemp: number = Number.parseFloat(min);\n  const maxTemp: number = Number.parseFloat(max);\n  const stepTemp: number = Number.parseFloat(step);\n  // 切割后的循环数\n  let num = 0;\n  // 数组 [{value: 10, text: '低档'}]\n  const dataList: any = [];\n  num = Math.round((maxTemp - minTemp) / stepTemp);\n  // 最大值距离循环后的最大值的差\n  // 5 % 2\n  //   // console.log(100 % 0.2) === 0.19999999999999446\n  const lastStep = maxTemp - (num * stepTemp + minTemp);\n  // 生成数组 [{value: 10, text: '低档'}]\n  for (let i = 0; i < (lastStep < 0 ? num : num + 1); i++) {\n    dataList.push({\n      value: i + 1,\n      // lastStep === 0说明和step值一样\n      text: ((stepTemp * 10) * i + minTemp * 10) / 10,\n    })\n  }\n  // lastStep !== 0 说明有余数，不取余数，操作小数不是很精确，新添加最大值到数组的最后一个\n  if (lastStep !== 0) {\n    dataList.push({\n      value: dataList.length + 1,\n      text: maxTemp,\n    })\n  }\n  //  // console.log(dataList)\n  return dataList\n}\n\n\nexport const dotInfoList = (dotsData: any[]) => {\n  const aInfoList = [];\n  const dotsLength = dotsData.length;\n  if (dotsLength > 0) {\n    const oneStepPercent = 100 / (dotsLength - 1);\n    for (let i = 0; i < dotsLength; i += 1) {\n      let aInfo: any = {\n        icon: '',\n      };\n      const hasIcon = !!dotsData[i].icon;\n      if (hasIcon) {\n        aInfo = { ...aInfo, icon: dotsData[i].icon,};\n      }\n      if (i === (dotsLength - 1)) {\n        aInfo = { ...aInfo, left: 100,};\n      } else {\n        const pos = oneStepPercent * i;\n        aInfo = { ...aInfo, left: pos,};\n      }\n      aInfo = { ...aInfo, text: dotsData[i].text,\n        value: dotsData[i].value,};\n      aInfoList.push(aInfo);\n    }\n  }\n  return aInfoList\n}"],"sourceRoot":""}