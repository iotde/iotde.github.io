{"version":3,"sources":["webpack:///../components/enum/IOTExecutePower/demo/1-demo-basic.tsx","webpack:///../components/enum/IOTExecutePower/index.mdx","webpack:///../components/enum/IOTExecutePower/demo/1-demo-basic.tsx?bde8","webpack:///../components/enum/IOTExecutePower/IOTExecutePower.tsx"],"names":["props","title","subTitle","value","show","icon","handler","item","console","log","streamId","type","disabled","executeValue","IOTExecutePower","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","code","desc","isMDXComponent","curValue","btnIcon","streamName","isBuild","rest","useState","clickActive","setClickActive","textActive","setTextActive","timer1","timer2","useEffect","setTimeout","className","join","style","marginLeft","onClick","clearTimeout"],"mappings":"4RAIMA,EAA+B,CACnCC,MAAO,OACPC,SAAU,CAAEC,MAAO,MAAOC,MAAM,GAChCC,KAAM,CAAEF,MAAO,kBAAmBC,MAAM,GACxCE,QAAS,SAACC,GACRC,QAAQC,IAAIF,IAEdG,SAAU,GACVC,KAAM,GACNC,UAAU,EACVC,aAAa,KAEA,oBAAM,YAACC,EAAA,EAAoBd,ICL7Be,EAAe,Q,2NAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGpB,EACF,8BACD,OAAO,YAACiB,EAAD,eAAeD,EAAiBhB,EAAhC,CAAuCoB,WAAYA,EAAYC,QAAQ,cAK5E,8BACA,gCACA,kBACE,GAAM,QADR,QAGA,kBACE,GAAM,QADR,QAGA,YAAC,IAAD,CAASC,KCjCE,6dDiCmBrB,MAAM,OAAOsB,KAAK,kBAAkBF,QAAQ,WAC5E,YAAC,EAAD,CAAWA,QAAQ,qB,yNAMrBF,EAAWK,gBAAiB,G,kIElCtBV,EAAmD,SAAC,GAapD,IAZJb,EAYI,EAZJA,MACAS,EAWI,EAXJA,SAEAR,GASI,EAVJuB,SAUI,EATJvB,UACAG,EAQI,EARJA,KAEAO,GAMI,EAPJc,QAOI,EANJd,UAEAC,GAII,EALJc,WAKI,EAJJd,cAEAP,GAEI,EAHJsB,QAGI,EAFJtB,SACGuB,EACC,wIAEkCC,oBAAkB,GAAjDC,EAFH,KAEgBC,EAFhB,OAGgCF,oBAAkB,GAA/CG,EAHH,KAGeC,EAHf,KAIAC,EAAc,KACdC,EAAc,KAkBlB,OAhBAC,qBAAU,WACJN,IACFI,EAASG,YAAW,WAClBN,GAAe,KACd,SAEJ,CAACD,IAEJM,qBAAU,WACJJ,IACFG,EAASE,YAAW,WAClBJ,GAAc,KACb,QAEJ,CAACD,IAGF,8BACE,+BAAKM,UAxCO,yBAwCmBV,GAC7B,mBAAKU,UAAU,aACb,mBAAKA,UAAU,eAEXlC,aAAA,EAAAA,EAAMD,OACJ,mBAAKmC,UAAU,cACb,oBAAMA,UAAW,CAAC,mBAAoBlC,WAAMF,MAAQE,EAAKF,MAAQ,mBAAmBqC,KAAK,QAI/F,mBAAKD,UAAU,cAAcE,MAAO,CAAEC,WAAYrC,WAAMD,KAAO,IAAM,UACnE,mBAAKmC,UAAU,cAAetC,IAE5BC,aAAA,EAAAA,EAAUE,OACR,mBAAKmC,UAAU,aAAarC,EAAQ,SAK5C,mBAAKqC,UAAS,gBAAiBR,EAAc,SAAW,IAAMY,QAAS,WAChE9B,IAAgBkB,IAKrBzB,WAJkB,CAChBH,MAAOU,EACPH,aAGFkC,aAAaT,GACbS,aAAaR,GACbJ,GAAe,GACfI,EAASE,YAAW,WAClBJ,GAAc,KACb,QAEH,oBAAMK,UAAU,aAAhB,KAEIR,GACE,oBAAMQ,UAAS,mBAAoBN,EAAa,YAAc,QAA/C,KAAf,QAKPrB,GACC,mBAAK2B,UAAU,sBAUZzB,W","file":"component---components-enum-iot-execute-power-index-mdx-46d1d5cc92f2587be9fa.js","sourcesContent":["import React from 'react';\nimport IOTExecutePower from '../IOTExecutePower';\nimport {iIOTExecutePowerProps} from '../interface';\n\nconst props: iIOTExecutePowerProps = {\n  title: '功能名称',\n  subTitle: { value: '副标题', show: true },\n  icon: { value: 'insideicon-cu-1', show: true },\n  handler: (item: any) => {\n    console.log(item);\n  },\n  streamId: '',\n  type: '',\n  disabled: false,\n  executeValue:'1'   \n};\nexport default () => <IOTExecutePower {...props} />;","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/fengyanwei/Downloads/Git/iot-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { CodeBox } from '../../doc-comps/code-box';\nimport BasicDemo from './demo/1-demo-basic';\nimport BasicDemoCode from '!raw-loader!./demo/1-demo-basic.tsx';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <p>{`#执行开关`}</p>\n    <p>{`控制设备开关。`}</p>\n    <h2 {...{\n      \"id\": \"代码演示\"\n    }}>{`代码演示`}</h2>\n    <h3 {...{\n      \"id\": \"基本用法\"\n    }}>{`基本用法`}</h3>\n    <CodeBox code={BasicDemoCode} title=\"基本用法\" desc=\"使用kind控制Alert类型\" mdxType=\"CodeBox\">\n  <BasicDemo mdxType=\"BasicDemo\" />\n    </CodeBox>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","export default \"import React from 'react';\\nimport IOTExecutePower from '../IOTExecutePower';\\nimport {iIOTExecutePowerProps} from '../interface';\\n\\nconst props: iIOTExecutePowerProps = {\\n  title: '功能名称',\\n  subTitle: { value: '副标题', show: true },\\n  icon: { value: 'insideicon-cu-1', show: true },\\n  handler: (item: any) => {\\n    console.log(item);\\n  },\\n  streamId: '',\\n  type: '',\\n  disabled: false,\\n  executeValue:'1'   \\n};\\nexport default () => <IOTExecutePower {...props} />;\";","import React, { useEffect, useState } from 'react';\nimport { iIOTExecutePowerProps } from './interface';\nimport './style/index.less';\n\nconst prefixCls = 'iot-execute-power-out';\n\nconst IOTExecutePower: React.FC<iIOTExecutePowerProps> = ({\n  title,\n  streamId,\n  curValue,\n  subTitle,\n  icon,\n  btnIcon,\n  disabled,\n  streamName,\n  executeValue,\n  isBuild = false,\n  handler,\n  ...rest\n}) => {\n\n  const [clickActive, setClickActive] = useState<boolean>(false);\n  const [textActive, setTextActive] = useState<boolean>(false);\n  let timer1: any = null;\n  let timer2: any = null;\n\n  useEffect(() => {\n    if (clickActive) {\n      timer1 = setTimeout(() => {\n        setClickActive(false);\n      }, 1500)\n    }\n  }, [clickActive])\n\n  useEffect(() => {\n    if (textActive) {\n      timer2 = setTimeout(() => {\n        setTextActive(false);\n      }, 1000)\n    }\n  }, [textActive])\n\n  return (\n    <>\n      <div className={prefixCls} {...rest}>\n        <div className='iot-power'>\n          <div className='power-left'>\n            {\n              icon?.show && (\n                <div className=\"power-icon\">\n                  <span className={['power-icon-image', icon?.value ? icon.value : 'insideicon-cu-1'].join(' ')}></span>\n                </div>\n              )\n            }\n            <div className=\"power-title\" style={{ marginLeft: icon?.show ? '0' : '.2rem' }} >\n              <div className=\"power-main\" >{title}</div>\n              {\n                subTitle?.show && (\n                  <div className=\"power-sub\">{subTitle['value']}</div>\n                )\n              }\n            </div>\n          </div>\n          <div className={`power-right ${clickActive ? 'active' : ''}`} onClick={() => {\n            if (!executeValue || clickActive) return;\n            const item: any = {\n              value: executeValue,\n              streamId,\n            };\n            handler?.(item);\n            clearTimeout(timer1);\n            clearTimeout(timer2);\n            setClickActive(true);\n            timer2 = setTimeout(() => {\n              setTextActive(true);\n            }, 500)\n          }}>\n            <span className='power-btn'>执行\n              {\n                clickActive && (\n                  <span className={`power-btn-span ${textActive ? 'animation' : 'stop'} `}>执行</span>\n                )\n              }\n            </span>\n          </div>\n          {disabled && (\n            <div className=\"power-disable\"></div>\n          )}\n        </div>\n        {/* {getContent()}\n        <IconButton icon={btnIcon ?? 'insideicon-cu-1'} /> */}\n      </div>\n    </>\n  );\n};\n\nexport default IOTExecutePower;\n"],"sourceRoot":""}