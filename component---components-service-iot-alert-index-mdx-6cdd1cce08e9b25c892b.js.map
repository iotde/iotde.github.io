{"version":3,"sources":["webpack:///../components/service/IOTAlert/IOTAlert.tsx","webpack:///../components/service/IOTAlert/demo/1-demo-basic.tsx","webpack:///../components/service/IOTAlert/index.mdx","webpack:///../components/service/IOTAlert/demo/1-demo-basic.tsx?22f3"],"names":["IOTAlert","message","jugements","streams","rest","useState","show","setShow","text","setText","useEffect","condJudgment","Array","isArray","jugement","ifCondition","thenCondition","flag","judgmentCondition","lastJudgement","j","length","condition","ifs","currentFlag","judgmentBracketCondition","k","ifCond","condJudgmentForOne","className","style","display","props","type","AirQuality","State","Power","Action","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","code","title","desc","isMDXComponent"],"mappings":"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","file":"component---components-service-iot-alert-index-mdx-6cdd1cce08e9b25c892b.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { IOTAlertProps } from './interface';\nimport './style/index.less';\nimport { condJudgmentForOne } from '../../base/utils';\nimport { array } from 'prop-types';\n\nconst prefixCls = 'iot-alert-out';\n\nconst IOTAlert: React.FC<IOTAlertProps> = ({\n  message,\n  jugements,\n  streams,\n  ...rest\n}) => {\n  const [show,setShow] = useState(false);\n  const [text,setText] = useState('');\n\n useEffect(() => {\n  condJudgment(jugements,streams);\n },[streams]);\n\n const condJudgment = (jugements: Array<any>, streams: any) => {\n    if(!jugements || !Array.isArray(jugements)){\n      setText(message);\n      setShow(true);\n      return\n    }\n    const jugement = jugements[0];\n    const ifCondition = jugement['ifCondition'];\n    const thenCondition = jugement['thenCondition'];\n    const flag = judgmentCondition(ifCondition,streams);\n    if(flag){\n      setText(thenCondition[0]['value']);\n    }\n    setShow(flag);\n};\n\n\nconst judgmentCondition = (ifCondition: Array<any>, streams: any) => {\n  let flag = false;\n  let lastJudgement;\n  for (let j = 0;j<ifCondition.length;j++) {\n    const condition = ifCondition[j];\n    const ifs = condition['if'];\n    const currentFlag = judgmentBracketCondition(ifs,streams);\n    if(lastJudgement === '||'){\n      flag = flag || currentFlag;\n    } else if(lastJudgement === '&&'){\n      flag = flag && currentFlag;\n    } else {\n      flag = currentFlag;\n    }\n    lastJudgement = condition['judgement'];\n  }\n  return flag;\n};\n\nconst judgmentBracketCondition = (ifs: Array<any>, streams: any) => {\n  let flag = false;\n  let lastJudgement = '';\n  for (let k = 0;k<ifs.length;k++) {\n    const ifCond = ifs[k];\n    const currentFlag = condJudgmentForOne(ifCond,streams);\n    if(lastJudgement === '||'){\n      flag = flag || currentFlag;\n    } else if(lastJudgement === '&&'){\n      flag = flag && currentFlag;\n    } else {\n      flag = currentFlag;\n    }\n    lastJudgement = ifCond['judgement'];\n  }\n  return flag;\n};\n\n  return (\n    <div className={prefixCls} style={{display: `${show ? 'block' : 'none'}`}} {...rest}>\n      <div className='iot-alert'>\n        <div className='iot-alert-icon'>\n        </div>\n        <div className='iot-alert-content'>\n            <div className='iot-alert-message'>\n              {text}\n            </div>\n      </div>\n     </div>\n    </div>\n  );\n};\n\nexport default IOTAlert;\n","import React from 'react';\nimport IOTAlert from '../IOTAlert';\nimport { IOTAlertProps } from '../interface';\n\nconst props: IOTAlertProps = {\n  type: 'service',\n  message: '提示文案',\n  streams: {\n    AirQuality:'5',\n    State:'2',\n    Power:'1',\n    Action:'11'\n  },\n  jugements:[{\n    \"name\": \"样式联动\",\n    \"ifCondition\": [{\n        \"if\": [{\n            \"streamId\": \"AirQuality\",\n            \"streamName\": \"空气质量\",\n            \"type\": \"enum\",\n            \"operator\": \"=\",\n            \"operatorDesc\": \"等于\",\n            \"value\": \"3\",\n            \"valueName\": \"重度污染\",\n            \"judgement\": \"||\",\n            \"judgementDesc\": \"或\"\n        },{\n          \"streamId\": \"State\",\n          \"streamName\": \"空气质量\",\n          \"type\": \"enum\",\n          \"operator\": \"=\",\n          \"operatorDesc\": \"等于\",\n          \"value\": \"2\",\n          \"valueName\": \"重度污染\",\n          \"judgement\": \"||\",\n          \"judgementDesc\": \"或\"\n      }],\n        \"judgement\": \"&&\",\n        \"judgementDesc\": \"或\"\n    },{\n        \"if\": [{\n            \"streamId\": \"Power\",\n            \"streamName\": \"空气质量\",\n            \"type\": \"enum\",\n            \"operator\": \"=\",\n            \"operatorDesc\": \"等于\",\n            \"value\": \"1\",\n            \"valueName\": \"重度污染\",\n            \"judgement\": \"&&\",\n            \"judgementDesc\": \"或\"\n        },{\n          \"streamId\": \"Action\",\n          \"streamName\": \"空气质量\",\n          \"type\": \"enum\",\n          \"operator\": \"=\",\n          \"operatorDesc\": \"等于\",\n          \"value\": \"11\",\n          \"valueName\": \"重度污染\",\n          \"judgement\": \"||\",\n          \"judgementDesc\": \"或\"\n      }],\n        \"judgement\": \"||\",\n        \"judgementDesc\": \"或\"\n    }],\n    \"thenCondition\": [{\n        \"actionType\": \"message\",\n        \"actionDesc\": \"提示文案\",\n        \"operator\": \"=\",\n        \"operatorDesc\": \"等于\",\n        \"value\": \"空气太差了,赶紧跑!\"\n    }]\n}]  \n};\nexport default () => <IOTAlert {...props} />;","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/fengyanwei/Downloads/Git/iot-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { CodeBox } from '../../doc-comps/code-box';\nimport BasicDemo from './demo/1-demo-basic';\nimport BasicDemoCode from '!raw-loader!./demo/1-demo-basic.tsx';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"提示服务组件\"\n    }}>{`提示服务组件`}</h1>\n    <h2 {...{\n      \"id\": \"代码演示\"\n    }}>{`代码演示`}</h2>\n    <h3 {...{\n      \"id\": \"基本用法\"\n    }}>{`基本用法`}</h3>\n    <CodeBox code={BasicDemoCode} title=\"基本用法\" desc=\"\" mdxType=\"CodeBox\">\n  <BasicDemo mdxType=\"BasicDemo\" />\n    </CodeBox>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","export default \"import React from 'react';\\nimport IOTAlert from '../IOTAlert';\\nimport { IOTAlertProps } from '../interface';\\n\\nconst props: IOTAlertProps = {\\n  type: 'service',\\n  message: '提示文案',\\n  streams: {\\n    AirQuality:'5',\\n    State:'2',\\n    Power:'1',\\n    Action:'11'\\n  },\\n  jugements:[{\\n    \\\"name\\\": \\\"样式联动\\\",\\n    \\\"ifCondition\\\": [{\\n        \\\"if\\\": [{\\n            \\\"streamId\\\": \\\"AirQuality\\\",\\n            \\\"streamName\\\": \\\"空气质量\\\",\\n            \\\"type\\\": \\\"enum\\\",\\n            \\\"operator\\\": \\\"=\\\",\\n            \\\"operatorDesc\\\": \\\"等于\\\",\\n            \\\"value\\\": \\\"3\\\",\\n            \\\"valueName\\\": \\\"重度污染\\\",\\n            \\\"judgement\\\": \\\"||\\\",\\n            \\\"judgementDesc\\\": \\\"或\\\"\\n        },{\\n          \\\"streamId\\\": \\\"State\\\",\\n          \\\"streamName\\\": \\\"空气质量\\\",\\n          \\\"type\\\": \\\"enum\\\",\\n          \\\"operator\\\": \\\"=\\\",\\n          \\\"operatorDesc\\\": \\\"等于\\\",\\n          \\\"value\\\": \\\"2\\\",\\n          \\\"valueName\\\": \\\"重度污染\\\",\\n          \\\"judgement\\\": \\\"||\\\",\\n          \\\"judgementDesc\\\": \\\"或\\\"\\n      }],\\n        \\\"judgement\\\": \\\"&&\\\",\\n        \\\"judgementDesc\\\": \\\"或\\\"\\n    },{\\n        \\\"if\\\": [{\\n            \\\"streamId\\\": \\\"Power\\\",\\n            \\\"streamName\\\": \\\"空气质量\\\",\\n            \\\"type\\\": \\\"enum\\\",\\n            \\\"operator\\\": \\\"=\\\",\\n            \\\"operatorDesc\\\": \\\"等于\\\",\\n            \\\"value\\\": \\\"1\\\",\\n            \\\"valueName\\\": \\\"重度污染\\\",\\n            \\\"judgement\\\": \\\"&&\\\",\\n            \\\"judgementDesc\\\": \\\"或\\\"\\n        },{\\n          \\\"streamId\\\": \\\"Action\\\",\\n          \\\"streamName\\\": \\\"空气质量\\\",\\n          \\\"type\\\": \\\"enum\\\",\\n          \\\"operator\\\": \\\"=\\\",\\n          \\\"operatorDesc\\\": \\\"等于\\\",\\n          \\\"value\\\": \\\"11\\\",\\n          \\\"valueName\\\": \\\"重度污染\\\",\\n          \\\"judgement\\\": \\\"||\\\",\\n          \\\"judgementDesc\\\": \\\"或\\\"\\n      }],\\n        \\\"judgement\\\": \\\"||\\\",\\n        \\\"judgementDesc\\\": \\\"或\\\"\\n    }],\\n    \\\"thenCondition\\\": [{\\n        \\\"actionType\\\": \\\"message\\\",\\n        \\\"actionDesc\\\": \\\"提示文案\\\",\\n        \\\"operator\\\": \\\"=\\\",\\n        \\\"operatorDesc\\\": \\\"等于\\\",\\n        \\\"value\\\": \\\"空气太差了,赶紧跑!\\\"\\n    }]\\n}]  \\n};\\nexport default () => <IOTAlert {...props} />;\";"],"sourceRoot":""}